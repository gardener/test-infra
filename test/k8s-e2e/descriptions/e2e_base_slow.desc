[Conformance]
[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] experimental resource usage tracking [Feature:ExperimentalResourceUsageTracking] resource tracking for 100 pods per node
[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] regular resource usage tracking resource tracking for 0 pods per node
[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] regular resource usage tracking resource tracking for 100 pods per node
[k8s.io] EquivalenceCache [Serial] validates GeneralPredicates is properly invalidated when a pod is scheduled [Slow]
[k8s.io] EquivalenceCache [Serial] validates pod affinity works properly when new replica pod is scheduled
[k8s.io] EquivalenceCache [Serial] validates pod anti-affinity works properly when new replica pod is scheduled
[k8s.io] Variable Expansion should fail substituting values in a volume subpath with absolute path [Feature:VolumeSubpathEnvExpansion][NodeAlphaFeature:VolumeSubpathEnvExpansion][Slow]
[k8s.io] Variable Expansion should fail substituting values in a volume subpath with backticks [Feature:VolumeSubpathEnvExpansion][NodeAlphaFeature:VolumeSubpathEnvExpansion][Slow]
[sig-api-machinery] Initializers [Feature:Initializers] don't cause replicaset controller creating extra pods if the initializer is not handled [Serial]
[sig-api-machinery] Initializers [Feature:Initializers] should dynamically register and apply initializers to pods [Serial]
[sig-api-machinery] Namespaces [Serial] should always delete fast (ALL of 100 namespaces in 150 seconds) [Feature:ComprehensiveNamespaceDraining]
[sig-api-machinery] Namespaces [Serial] should delete fast enough (90 percent of 100 namespaces in 150 seconds)
[sig-apps] CronJob should not schedule jobs when suspended [Slow]
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow]
[sig-apps] Daemon set [Serial] should not update pod when spec was updated and update strategy is OnDelete
[sig-apps] Daemon set [Serial] should run and stop complex daemon with node affinity
[sig-apps] StatefulSet [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow] should creating a working mysql cluster
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] Deployment Should scale from 1 pod to 3 pods and from 3 to 5
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] Deployment Should scale from 5 pods to 3 pods and from 3 to 1
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicaSet Should scale from 1 pod to 3 pods and from 3 to 5
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicaSet Should scale from 5 pods to 3 pods and from 3 to 1
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicationController Should scale from 1 pod to 3 pods and from 3 to 5 and verify decision stability
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicationController Should scale from 5 pods to 3 pods and from 3 to 1 and verify decision stability
[sig-cli] Kubectl client [k8s.io] Kubectl taint [Serial] should remove all the taints with the same key off a node
[sig-cli] Kubectl client [k8s.io] Kubectl taint [Serial] should update the taint on a node
[sig-scheduling] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds
[sig-scheduling] NoExecuteTaintManager Multiple Pods [Serial] only evicts pods without tolerations from tainted nodes
[sig-scheduling] NoExecuteTaintManager Single Pod [Serial] doesn't evict pod with tolerations from tainted nodes
[sig-scheduling] NoExecuteTaintManager Single Pod [Serial] eventually evict pod with finite tolerations from tainted nodes
[sig-scheduling] NoExecuteTaintManager Single Pod [Serial] evicts pods from tainted nodes
[sig-scheduling] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction
[sig-scheduling] PodPriorityResolution [Serial] validates critical system priorities are created and resolved
[sig-scheduling] SchedulerPredicates [Serial] validates MaxPods limit number of pods that are allowed to run [Slow]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeAffinity is respected if not matching
[sig-scheduling] SchedulerPredicates [Serial] validates that required NodeAffinity setting is respected if matching
[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if matching
[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if not matching
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP
[sig-scheduling] SchedulerPredicates [Serial] validates that there is no conflict between pods with same hostPort but different hostIP and protocol
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod
[sig-scheduling] SchedulerPreemption [Serial] validates pod anti-affinity works in preemption
[sig-scheduling] SchedulerPriorities [Serial] Pod should avoid nodes that have avoidPod annotation
[sig-scheduling] SchedulerPriorities [Serial] Pod should be preferably scheduled to nodes pod can tolerate
[sig-storage] ConfigMap Should fail non-optional pod creation due to configMap object does not exist [Slow]
[sig-storage] ConfigMap Should fail non-optional pod creation due to the key in the configMap object does not exist [Slow]
[sig-storage] Dynamic Provisioning DynamicProvisioner [Slow] should provision storage with different parameters
[sig-storage] Dynamic Provisioning DynamicProvisioner delayed binding [Slow] should create persistent volumes in the same zone as node after a pod mounting the claims is started
[sig-storage] Dynamic Provisioning DynamicProvisioner delayed binding with allowedTopologies [Slow] should create persistent volumes in the same zone as specified in allowedTopologies after a pod mounting the claims is started
[sig-storage] Dynamic Provisioning DynamicProvisioner External should let an external dynamic provisioner create and delete persistent volumes [Slow]
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for git_repo [Serial] [Slow]
[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 4 PVs and 2 PVCs: test write access [Slow]
[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should create and recreate local persistent volume
[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should discover dynamically created local persistent volume mountpoint in discovery directory
[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should not create local persistent volume for filesystem volume that was not bind mounted
[sig-storage] PersistentVolumes-local  Local volume that cannot be mounted [Slow] should fail due to non-existent path
[sig-storage] PersistentVolumes-local  Local volume that cannot be mounted [Slow] should fail due to wrong node
[sig-storage] PersistentVolumes-local  StatefulSet with pod affinity [Slow] should use volumes on one node when pod has affinity
[sig-storage] PersistentVolumes-local  StatefulSet with pod affinity [Slow] should use volumes on one node when pod management is parallel and pod has affinity
[sig-storage] PersistentVolumes-local  Stress with local volume provisioner [Serial] should use be able to process many pods and reuse local volumes
[sig-storage] Projected configMap Should fail non-optional pod creation due to configMap object does not exist [Slow]
[sig-storage] Projected configMap Should fail non-optional pod creation due to the key in the configMap object does not exist [Slow]
[sig-storage] Projected secret Should fail non-optional pod creation due to secret object does not exist [Slow]
[sig-storage] Projected secret Should fail non-optional pod creation due to the key in the secret object does not exist [Slow]
[sig-storage] Secrets Should fail non-optional pod creation due to secret object does not exist [Slow]
[sig-storage] Secrets Should fail non-optional pod creation due to the key in the secret object does not exist [Slow]
[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted
[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications with PVCs
[sig-network] ClusterDns [Feature:Example] should create pod that uses dns
[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete
[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] ReplicationController light Should scale from 2 pods to 1 pod