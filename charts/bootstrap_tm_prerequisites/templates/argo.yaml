# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: {{.Release.Namespace}}
data:
    config: |
        containerRuntimeExecutor: {{ .Values.argo.containerRuntimeExecutor }}
        executor:
          resources:
            requests:
              cpu: "50m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "150Mi"
        artifactRepository:
          archiveLogs: true
          s3:
            bucket: {{.Values.objectStorage.bucketName}}
            keyPrefix: {{ .Values.objectStorage.keyPrefix }}
            endpoint: "{{ tpl .Values.objectStorage.endpoint . }}"        #AWS => s3.amazonaws.com; GCS => storage.googleapis.com
            insecure: {{ not .Values.objectStorage.ssl }}                  #omit for S3/GCS. Needed when minio runs without TLS
            accessKeySecret:                #omit if accessing via AWS IAM
              name: {{.Values.objectStorage.secret.name}}
              key: accessKey
            secretKeySecret:                #omit if accessing via AWS IAM
              name: {{.Values.objectStorage.secret.name}}
              key: secretKey
        metricsConfig:
          enabled: false # because metrics are broken since v2.4.0: https://github.com/argoproj/argo/issues/1634
          path: /metrics
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: argo-ui
  namespace: {{.Release.Namespace}}
spec:
    type: {{.Values.argoui.serviceType}}
    ports:
    - port: 80
      targetPort: 8001
    selector:
        app: argo-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-ui
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      app: argo-ui
  template:
    metadata:
      labels:
        app: argo-ui
    spec:
      containers:
      - env:
        - name: ARGO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: IN_CLUSTER
          value: "true"
        - name: ENABLE_WEB_CONSOLE
          value: "false"
        - name: BASE_HREF
          value: /
        image: argoproj/argoui:{{ .Values.argo.tag }}
        name: argo-ui
      serviceAccountName: argo-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-controller
  namespace: {{.Release.Namespace}}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  selector:
    matchLabels:
      app: workflow-controller
  template:
    metadata:
      labels:
        app: workflow-controller
    spec:
      containers:
      - args:
        - --configmap
        - workflow-controller-configmap
        - --executor-image
        - argoproj/argoexec:{{ .Values.argo.tag }}
        command:
        - workflow-controller
        image: argoproj/workflow-controller:{{ .Values.argo.tag }}
        name: workflow-controller
      serviceAccountName: argo
