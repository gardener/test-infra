# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testmachinery-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "defaultLabels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tm-controller
  template:
    metadata:
      annotations:
        checksum/config-secret: {{ include (print $.Template.BasePath "/secret-tm-config.yaml") . | sha256sum }}
        checksum/tls-secret: {{ include (print $.Template.BasePath "/secret-tls.yaml") . | sha256sum }}
        {{ if .Values.testmachinery.github.credentials }}
        checksum/github-secret: {{ include (print $.Template.BasePath "/gh-secrets.yaml") . | sha256sum }}
        {{ end }}
        {{- if .Values.imageVectorOverwrite }}
        checksum/configmap-imagevector-overwrite: {{ include (print $.Template.BasePath "/configmap-imagevector-overwrite.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app: tm-controller
    spec:
{{ if .Values.controller.imagePullSecretName }}
      imagePullSecrets:
      - name: "{{.Values.controller.imagePullSecretName}}"
{{end}}
      serviceAccountName: {{ required ".Values.controller.serviceAccountName is required" .Values.controller.serviceAccountName }}
      containers:
      - name: testmachinery-controller
        image: "{{ .Values.controller.image }}:{{ .Values.controller.tag }}"
        imagePullPolicy: {{ .Values.controller.pullPolicy }}
        command: ["/testmachinery-controller"]
        args:
        - --config=/etc/testmachinery/config/config.yaml
        - -v={{ .Values.controller.verbosity }}
        {{- if .Values.imageVectorOverwrite }}
        env:
        - name: IMAGEVECTOR_OVERWRITE
          value: /charts_overwrite/images_overwrite.yaml
        {{- end }}
        ports:
        - name: webhook-server
          containerPort: {{ .Values.controller.webhook.port }}
          protocol: TCP
        - name: metrics-server
          containerPort: {{ .Values.controller.metricsEndpointPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{.Values.controller.healthEndpointPort}}
          initialDelaySeconds: 3
          periodSeconds: 30
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{.Values.controller.healthEndpointPort}}
          initialDelaySeconds: 3
          periodSeconds: 30
          failureThreshold: 5
        volumeMounts:
        - name: config
          mountPath: /etc/testmachinery/config
          readOnly: true
        - name: certs
          mountPath: /etc/testmachinery-controller/srv
          readOnly: true
        {{- if .Values.testmachinery.github.credentials }}
        - name: github-secrets
          mountPath: /etc/testmachinery-controller/secrets/git
          readOnly: true
        {{- end}}
        {{- if and (.Values.testmachinery.local) (.Values.controller.hostPath) }}
        - name: local-host
          mountPath: "{{.Values.controller.hostPath}}"
        {{- end }}
      volumes:
      - name: config
        secret:
          secretName: tm-configuration
      - name: certs
        secret:
          secretName: testmachinery-controller-cert
      {{- if .Values.testmachinery.github.credentials }}
      - name: github-secrets
        secret:
          secretName: tm-github
      {{- end }}
      {{- if and (.Values.testmachinery.local) (.Values.controller.hostPath) }}
      - name: local-host
        hostPath:
          path: "{{.Values.controller.hostPath}}"
      {{- end }}