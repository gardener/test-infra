# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: testmachinery-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: tm-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tm-controller
  template:
    metadata:
      annotations:
        checksum/tls-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/github-secret: {{ include (print $.Template.BasePath "/gh-secrets.yaml") . | sha256sum }}
      labels:
        app: tm-controller
    spec:
{{ if .Values.controller.imagePullSecretName }}
      imagePullSecrets:
      - name: "{{.Values.controller.imagePullSecretName}}"
{{end}}
      serviceAccountName: {{ required ".Values.controller.serviceAccountName is required" .Values.controller.serviceAccountName }}
      containers:
      - name: testmachinery-controller
        image: "{{ .Values.controller.image }}:{{ .Values.controller.tag }}"
        imagePullPolicy: {{ .Values.controller.pullPolicy }}
        command: ["/testmachinery-controller"]
        args:
        - --webhook-port={{.Values.controller.webhook.port}}
        - --webhook-cert-dir=/etc/testmachinery-controller/srv
        - --health-addr=:{{.Values.controller.healthEndpointPort}}
        - --metrics-addr=:{{.Values.controller.metricsEndpointPort}}
        - --github-cache-dir=/cache
        - --namespace={{ .Release.Namespace }}
        - --max-concurrent-syncs={{ .Values.controller.maxConcurrentSyncs }}
        - --enable-pod-gc={{ .Values.cleanup.enabled }}
        - -v={{ .Values.controller.verbosity }}
        {{- if .Values.secrets.github.data }}
        - --github-secrets-path={{ .Values.secrets.github.path }}/github-secrets.yaml
        {{- end }}
        {{- if .Values.elasticsearch.endpoint }}
        - --es-endpoint={{ .Values.elasticsearch.endpoint }}
        - --es-username=$(ES_USERNAME)
        - --es-password=$(ES_PASSWORD)
        {{- end }}
        {{- if .Values.local.enabled }}
        - --insecure=true
        {{- end}}
        {{- if .Values.controller.testDefPath }}
        - --testdef-path={{ .Values.controller.testDefPath }}
        {{- end }}
        env:
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{.Values.config.name}}
              key: objectstore.endpoint
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{.Values.objectStorage.secret.name}}
              key: accessKey
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{.Values.objectStorage.secret.name}}
              key: secretKey
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: {{.Values.config.name}}
              key: objectstore.bucketName
        - name: S3_SSL
          valueFrom:
            configMapKeyRef:
              name: {{.Values.config.name}}
              key: objectstore.ssl
        {{- if .Values.elasticsearch.endpoint }}
        - name: ES_USERNAME
          valueFrom:
            secretKeyRef:
              name: testmachinery-elasticsearch
              key: username
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: testmachinery-elasticsearch
              key: password
        {{- end }}
        ports:
        - name: webhook-server
          containerPort: {{ .Values.controller.webhook.port }}
          protocol: TCP
        - name: metrics-server
          containerPort: {{ .Values.controller.metricsEndpointPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{.Values.controller.healthEndpointPort}}
          initialDelaySeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{.Values.controller.healthEndpointPort}}
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: certs
          mountPath: /etc/testmachinery-controller/srv
          readOnly: true
        {{- if .Values.secrets.github.data }}
        - name: github-secrets
          mountPath: {{ .Values.secrets.github.path }}
          readOnly: true
        {{- end}}
        {{- if and (.Values.local.enabled) (.Values.local.hostPath) }}
        - name: local-host
          mountPath: "{{.Values.local.hostPath}}"
        {{- end }}
      volumes:
      - name: certs
        secret:
          secretName: testmachinery-controller-cert
      {{- if .Values.secrets.github.data }}
      - name: github-secrets
        secret:
          secretName: tm-github
      {{- end }}
      {{- if and (.Values.local.enabled) (.Values.local.hostPath) }}
      - name: local-host
        hostPath:
          path: "{{.Values.local.hostPath}}"
      {{- end }}