/*
Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/gardener/test-infra/pkg/apis/testmachinery/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TestrunLister helps list Testruns.
type TestrunLister interface {
	// List lists all Testruns in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.Testrun, err error)
	// Testruns returns an object that can list and get Testruns.
	Testruns(namespace string) TestrunNamespaceLister
	TestrunListerExpansion
}

// testrunLister implements the TestrunLister interface.
type testrunLister struct {
	indexer cache.Indexer
}

// NewTestrunLister returns a new TestrunLister.
func NewTestrunLister(indexer cache.Indexer) TestrunLister {
	return &testrunLister{indexer: indexer}
}

// List lists all Testruns in the indexer.
func (s *testrunLister) List(selector labels.Selector) (ret []*v1beta1.Testrun, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Testrun))
	})
	return ret, err
}

// Testruns returns an object that can list and get Testruns.
func (s *testrunLister) Testruns(namespace string) TestrunNamespaceLister {
	return testrunNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TestrunNamespaceLister helps list and get Testruns.
type TestrunNamespaceLister interface {
	// List lists all Testruns in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.Testrun, err error)
	// Get retrieves the Testrun from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.Testrun, error)
	TestrunNamespaceListerExpansion
}

// testrunNamespaceLister implements the TestrunNamespaceLister
// interface.
type testrunNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Testruns in the indexer for a given namespace.
func (s testrunNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.Testrun, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Testrun))
	})
	return ret, err
}

// Get retrieves the Testrun from the indexer for a given namespace and name.
func (s testrunNamespaceLister) Get(name string) (*v1beta1.Testrun, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("testrun"), name)
	}
	return obj.(*v1beta1.Testrun), nil
}
