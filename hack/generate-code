#!/bin/bash
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

PROJECT_MOD_ROOT="github.com/gardener/test-infra"

CURRENT_DIR=$(dirname $0)
PROJECT_ROOT="${CURRENT_DIR}"/..

# setup virtual GOPATH
source "$GARDENER_HACK_DIR"/vgopath-setup.sh

CODE_GEN_DIR=$(go list -m -f '{{.Dir}}' k8s.io/code-generator)

# We need to explicitly pass GO111MODULE=off to k8s.io/code-generator as it is significantly slower otherwise,
# see https://github.com/kubernetes/code-generator/issues/100.
export GO111MODULE=off

rm -f ${GOPATH}/bin/*-gen

chmod +x "${CODE_GEN_DIR}"/*.sh

echo "> Generating internal groups for TestMachinery"
"${CODE_GEN_DIR}"/generate-internal-groups.sh \
  deep-copy,defaulter,conversion \
  $PROJECT_MOD_ROOT/pkg/client/testmachinery \
  $PROJECT_MOD_ROOT/pkg/apis \
  $PROJECT_MOD_ROOT/pkg/apis \
  testmachinery:v1beta1 \
  -h $(dirname $0)/boilerplate.go.txt

echo "> Generating internal groups for TestMachinery config"
"${CODE_GEN_DIR}"/generate-internal-groups.sh \
  deepcopy,defaulter,conversion \
  $PROJECT_MOD_ROOT/pkg/client/config \
  $PROJECT_MOD_ROOT/pkg/apis \
  $PROJECT_MOD_ROOT/pkg/apis \
  config:v1beta1 \
  -h $(dirname $0)/boilerplate.go.txt

echo "> Generating deepcopy for $PROJECT_ROOT/pkg/util/strconf"
${GOPATH}/bin/deepcopy-gen \
  --input-dirs $PROJECT_MOD_ROOT/pkg/util/strconf \
  -O zz_generated.deepcopy \
  -h $(dirname $0)/boilerplate.go.txt

go install k8s.io/kube-openapi/cmd/openapi-gen

echo "Generating openapi definitions"
${GOPATH}/bin/openapi-gen "$@" \
  --v 1 \
  --logtostderr \
  --input-dirs=$PROJECT_MOD_ROOT/pkg/apis/testmachinery/v1beta1,$PROJECT_MOD_ROOT/pkg/apis/config/v1beta1,$PROJECT_MOD_ROOT/pkg/apis/telemetry/v1beta1,$PROJECT_MOD_ROOT/pkg/util/strconf \
  --report-filename=./$(dirname "${0}")/../pkg/openapi/api_violations.report \
  --output-package=$PROJECT_MOD_ROOT/pkg/openapi \
  -h $(dirname $0)/boilerplate.go.txt

# echo "Generating groups for $PROJECT_ROOT"
# $(dirname $0)/../vendor/k8s.io/code-generator/generate-groups.sh \
#   all \
#   $PROJECT_ROOT/pkg/client/testmachinery \
#   $PROJECT_ROOT/pkg/apis \
#   testmachinery:v1beta1 \
#   -h $(dirname $0)/boilerplate.go.txt