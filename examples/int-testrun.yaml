# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TestRun CRDs will be created by Test-Machinery controllers, by concourse jobs or manually to run e.g. single tests.
apiVersion: testmachinery.sapcloud.io/v1beta1
kind: Testrun
metadata:
  generateName: integration-
  namespace: default
spec:
  owner: gardener@example.com # test owner and contact person in case of a test failure
  recipientsOnFailure: developer1@example.com, developer2@example.com # optional, list of emails to be notified if a step fails

  # defines where to look for TestDefs
  locationSets:
  - name: github-locations
    # optional; defines the default location set which is used if no specific location is defined for a step.
    default: true
    locations:
      - type: git
        repo: https://github.com/gardener/gardener.git
        revision: master
      - type: git
        repo: https://github.com/gardener/test-infra.git
        revision: master

  kubeconfigs:
    gardener: #base64 heredoc kubeconfig
    seed:
      secretKeyRef:
        name: mysecret
        key: kubeconfig
    shoot:


  # Global config available to every test task in all phases (testFlow and onExit)
  config:
    - name: SHOOTNAME
      value: "integration-abc12"
      type: env

  # the execution flow:
  testflow:
    - name: create-step
      definition:
        name: create-shoot
    - name: delete-step
      dependsOn: [ create-step ]
      definition:
        name: delete-shoot
#    - name: label-step
#      dependsOn: [ demo-step ]
#      definition:
#        label: default

#  onExit:
#    - - name: delete-shoot
#        condition: error
