test-infra:
  template: 'default'
  inherit:
    ti_default_traits: &ti_default_traits
      scheduling:
        suppress_parallel_execution: true
      version:
        preprocess:
          'inject-commit-hash'
        inject_effective_version: true
      notifications:
        default:
          on_error:
            triggering_policy: 'only_first'
    ti_docker_images: &ti_docker_images
      publish:
        dockerimages:
            tm-base-image:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/base-step
              dockerfile: 'Dockerfile'
              dir: 'hack/images/base'
              tag_as_latest: true
            tm-controller:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/testmachinery-controller
              dockerfile: 'Dockerfile'
              target: tm-controller
              tag_as_latest: true
            telemetry-controller:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/telemetry-controller
              dockerfile: 'Dockerfile'
              target: telemetry-controller
              tag_as_latest: true
            tm-run:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/testmachinery-run
              dockerfile: 'Dockerfile'
              target: tm-run
              tag_as_latest: true
            tm-bot:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/bot
              dockerfile: 'Dockerfile'
              target: tm-bot
              tag_as_latest: true
            tm-prepare-image:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/prepare-step
              dockerfile: 'Dockerfile'
              target: tm-prepare
              tag_as_latest: true
    ti_test_steps: &ti_test_steps
      check:
        image: 'golang:1.14.1'
      test:
        image: 'golang:1.14.1'

  jobs:
    head-update:
      traits:
        <<: *ti_default_traits
        <<: *ti_docker_images
        draft_release: ~
      steps:
        <<: *ti_test_steps
        integration:
          image: 'eu.gcr.io/gardener-project/cc/job-image-golang:0.10.0'
          depends:
          - publish
        integration-bot:
          image: 'eu.gcr.io/gardener-project/cc/job-image-golang:0.10.0'
          depends:
          - publish
    pull-request:
      traits:
        <<: *ti_default_traits
        <<: *ti_docker_images
        pull-request:
          disable-status-report:
          - prepare-test
      steps:
        <<: *ti_test_steps
        prepare-test:
          image: eu.gcr.io/gardener-project/gardener/testmachinery/base-step:latest
          execute:
          - ./it-prepare.py
        integration:
          image: 'eu.gcr.io/gardener-project/cc/job-image-golang:0.11.0'
          depends:
          - prepare-test
          - publish
        integration-bot:
          image: 'eu.gcr.io/gardener-project/cc/job-image-golang:0.11.0'
          depends:
          - prepare-test
          - publish
    release:
      traits:
        version:
          preprocess: 'finalize'
          inject_effective_version: true
        release:
          nextversion: 'bump_minor'
        slack:
          default_channel: 'internal_scp_workspace'
          channel_cfgs:
            internal_scp_workspace:
              channel_name: 'k8s-oq'
              slack_cfg_name: 'scp_workspace'
        scheduling:
          suppress_parallel_execution: true
        <<: *ti_docker_images
      steps:
        <<: *ti_test_steps
        publish-helm:
          execute:
          - ./publish-helm
          depends:
          - release


    #####################
    #      Images       #
    #####################
    tm-golang-image:
      repo:
        trigger: false
      traits:
        version:
          preprocess: 'finalize'
          inject_effective_version: true
        publish:
          dockerimages:
            tm-golang-image:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/golang
              dockerfile: 'Dockerfile'
              dir: 'hack/images/golang'
              tag_as_latest: true
    tm-prepare-image:
      repo:
        trigger: false
      traits:
        version:
          preprocess: 'finalize'
          inject_effective_version: true
        publish:
          dockerimages:
            tm-prepare-image:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/prepare-step
              dockerfile: 'Dockerfile'
              dir: 'hack/images/prepare'
              tag_as_latest: true
    tm-base-image:
      repo:
        trigger: false
      traits:
        version:
          preprocess: 'finalize'
          inject_effective_version: true
        publish:
          dockerimages:
            tm-base-image:
              registry: 'gcr-readwrite'
              image: eu.gcr.io/gardener-project/gardener/testmachinery/base-step
              dockerfile: 'Dockerfile'
              dir: 'hack/images/base'
              tag_as_latest: true
